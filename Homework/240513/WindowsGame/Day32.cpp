#include "pch.h"

void Comment1()
{
	// 1. 숙제풀이
	// 이미지가 부모 패널에 따라서, 위치 변하도록 프레임워크 코드 수정

	// ex1. Panel의 pos이 중앙으로 잡혀있고
	//		- Image의 pos이 0,0 으로 잡혀있을때
	//		- Render를 하면, 중앙에 나와야한다.


	// ex2. Panel의 pos이 (100, 100)으로 잡혀있고
	//		- Image의 pos이 (-10, 20) 으로 잡혀있을때
	//		- Render를 하면, (90, 120)에 나와야한다.



	// UI 룰 :
	//  패널안에 (그릴 수 있는) UI요소가 들어간다.



	// 2. 선생님이 UI중에서 제일 중요한거라고 생각하는 
	// - Button 구현
	// - Console에서 새롭게 문법하나 배울것.
}

void Comment2()
{
	// 이미지를 그릴 때 ,Render Position은 부모 패널의 영향을 받아야한다.
	// -> 부모 패널은 어떻게 가져오지? 
	// -> 못가져오면, 가져올 수 있도록 *변수로 기억을 해준다*
	// 변수를 만들기만하고, 사용(세팅)을 안해줬음.
	// 내 부모는 어디서 세팅해야하나?
	// -> 역으로 생각하면 자식세팅은 어디서했지? -> Panel에서 AddChild
	// 변수 사용


	// 문제인 경우 
	// 패널 안에 패널이 있는 경우
	// 계층구조

	// Inventory 구현 시
	// Inventory Root Panel (Test Panel)
	//	 -Icon List Panel
	//		- BackgroundImage
	//		- IconImage1
	//		- IconImage2

	// List<UI*> temp;
	// temp 이 변수안에 자신의 부모들을 모두 모아두는 형식으로 먼저 짜보는게 좋을것 같다.
	// 이게 되면
	// for문 돌아서 모든 포지션 더해주면 된다.

	// => 그림을 그릴때, 부모의 부모의 부모의 ... 해서
	// 모든 부모를 가져온 position을 구해야한다.

	// Tree, Linked List 했을때 비슷하죠??
	// 계층구조 


	//그래서 이거를 지금 실습
	
}

void Comment3()
{
	// 숙제 2048 좀 만들어 봐라
	// 포트폴리오로 좀 쓰게

	// 숙제하고 시간남으면
	// 함수 포인터 공부좀 해와라
	// 함수 포인터는 현업사이에도 악명이 높음
}