#include <iostream>

using namespace std;

void summary()
{
	// 1. 숙제풀이(영상으로 확인하기)
	// 2. 씬매니저(씬 구분 가능하도록) (homework1, homework2 구분해서 할 수 있도록)
	// 3. 게임수학 틈틈히 할 것 (외적, 내적, 기하, 벡터 등)
}


void Comment1()
{
	// 1. 숙제풀이 (구구단)
	// Windows API 왔다고 수도코드를 안쓰면 안된다.
	// 수도코드는 평생 써야한다.
	// 수도코드 없이 코드를 짜지 말라
	// 상황에 맞게 짜야한다. 
	// Init
	//	- 구구단 상자 9개 변수를 만들어야함.		(상자 변수는 vector<RECT> gugudan 라는 자료형을 사용합니다.) (구구단은 벡터쓰는게 좋다)
	//	- 현재 단 = 0 초기화
	 
	// Updata(매 프레임, 변수를 변경해주는 곳)
	// 
	// if( 마우스 좌클릭 했을 때)
	// {
	//		for( 구구단상자 )
	//		{
	//			if(PtInRect (구구단상자[i], 마우스좌표) )
	//				{
	//					현재 단 = 몇번째 구구단 상자를 클릭했는지 저장.
	//				}
	//		}
	// }
	
	// Render(매 프레임, 그림을 그리는 곳)
	// - if( 현재 단 != 0)
	//		마우스 주변으로 구구단 그려주기



	// 2. Scene Manager
	// 대부분의 엔진에 이미 내장되어 있다.
	// 여러가지 씬으로 구성되어 있다. (인트로 씬, 인게임 씬 등)
	// 유저에게 보이는 씬 말고도 개발적으로 임의로 만들어둔 씬

	// Scene 객체
	// scene객체를 통해서 더블버퍼링 코드랑 섞어 코드를 짜고 있는데
	// 실제로는 게임 로직에만 집중할 수 있도록 할거다.
	// Scene끼리 전환도 가능하게 해주는게 Scene Manager이다.
}

void Move()
{

}