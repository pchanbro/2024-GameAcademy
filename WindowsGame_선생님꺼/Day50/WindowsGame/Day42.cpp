#include "pch.h"


void Comment1()
{
	// 수업예정 변경
	// 
	// 타워디펜스 게임을 먼저 만들고
	//   -> 여기에 서버를 붙여나가는 형식

	// 오늘 데이터매니저까지만 만들고
	// 서버를 먼저 진행하겠습니다.

	// 서버가 끝나면 게임을 만드는거랑 네트워크연동 동시에 진행


	// 숙제완료율이 되게 낮은편
	//  충분히 여태까지 배운내용으로 타워디펜스 만들수있습니다.

	// 서버 (C#으로 새롭게 배웁니다.)
	//  할수있는 학생이라도 타워디펜스를 먼저 만들어보는 시간을 주는게


	// C#이라는 새로운 언어
	//  서버 (웹서버)
	//   

	// 서버연동으로 게임만들기


	// + 당장 쓸수있는 이미지가 없습니다.
	// (비교적) 불륨 큰 게임 만들어보는 경험
}


void Comment2()
{
	// DataManager


	// 1. 게임에서 사용하는 데이터를 어떻게 관리할것인가?
	// 기획자가 입력하기 편해야함.

	// 데이터
	//  - 여러가지 형태로 게임의 데이터를 저장합니다.

	//  1. text or binary
	//  2. excel
	//  3. json (구조체를 text로 변환하는 방법중에 하나)

	// 그래서 JSON이 무엇인가?
	

	// 데이터 -> Parse을 해야함.
	// Parse란?
	// 데이터를 원하는 데이터로 가공하는 작업


	// JsonParse는
	// C++에는 따로 지원해주는 함수가 없습니다.

	// 만들어둔 Library가 상당히 많습니다.

	// 보통게임회사에서 많이쓰는 JSON Library 
	// Rapidjson (Tencent라는 게임회사 에서 제작)
	// 


	// 좋은 라이브러리 판별법
	//  
	// 라이브러리를 써야하는 상황 (추천받아서 사용하는 경우 제외)
	//  - 무슨 기능을 구현해야하는데, 기능이 너무 명확하고, 누군가가 만들어놨을것같은 경우

	// most star
	//  -> 좋아요

	// star수가 어느정도는 되어있어야 안정적인 라이브러리

	// github에서 따로 검증해주지 않아요.
	// 이 라이브러리가 좋은건지, 아니면 더이상 못쓰는건지 

	// 1. Star수가 1k이상 인지.
	// 2. Release가 계속 이어져오고 있는지.
	// 3. Issue가 계속 수정되있는지.


	// 라이브러리 사용방법
	//  1. Installation
	//  2. Usage
	// 를 무작정 따라한다.

	// (새 프로젝트 파서 하세요.)


}