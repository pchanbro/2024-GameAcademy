#include <iostream>

using namespace std;

void main()
{
	// 변수 -> 정수형 변수

	// 1. 변수가 무엇인지?
	// -> 프로그램에서 기억해야하는 데이터 
	
	// 2. 변수 사용 하는법
	// [1] 자료형 변수명 = 값;
	// [2] 자료형 변수명;

	// 프로그램은 에피소드형 수업이 아니다.
	// 에피소드형 수업은 하나를 놓쳐도 다음 수업주제만 이해하면 그내용부터 따라가기가 가능함
	// 하지만 프로그램은 하나 놓치면 그 이후의 것은 따라가지 못한다.

	// 자료형 => 정수 자료형

	// 1Byte 정수 (음수도 표현이 가능함) (0 ~ 255)
	//  1Byte => 8Bit (bit => 0과 1로 이루어진 데이터)
	//  프로그램은 다 0과 1로 이루어짐
	 
	
	// 2Byte 정수
	// 4Byte 정수 (-21억 ~ 21억)
	//	=> 접근이 빠름(cpu적으로)(인텔이 제일 빠르게 만듦)
	// 8Byte 정수

	// 1byte : char
	// 2byte : short
	// 4byte : int
	// 8byte : long long

	// 4byte : int (-21억 ~ 21억)

	// 정수의 출력
	// - 자료형 변수명 = 값;
	// 아직 변수명에 대한 고민을 할 시기는 아니다.
	int 나이 = 10;

	::printf("나이 : %10d\n", 나이);  // 10칸을 확보하고 오른쪽부터 쓴다.
	::printf("나이 : %-10d\n", 나이); // 10칸을 확보하고 왼쪽부터 쓴다.
	::printf("나이 : %d\n", 나이);    // 그냥 되는대로 쓴다.

	short short변수1 = 5000000; // 값을 5000000 으로 지정, short의 범위를 넘어섰다. 그래서 그 부분들은 2진수로 따졌을때 다 0으로 만들어버림
	::printf("short변수1 : %d\n", short변수1); // 그래서 결과로 19264가 나온다.
	// 즉 저장할 수 있는 비트가 한정되어 있기 때문에 넘치는 내용은 담을 수 없다.

	// 예를들어 메이플 메소
	// 옛날엔 int형으로 되어있어서
	// 21억을 못넘겼었다.
	// 문제 생긴 이후에
	// 8Byte로 바꿈

}