#include <iostream>
// - input : 키보드입력, 마우스입력 등 (키보드입력 위주)
// - output : 출력 (모니터출력, 프린터기 출력) (콘솔이니까 콘솔창출력 위주)

using namespace std;
// 얘는 추후에 자세히
// 함수를 간단하게 쓴다 정도만 알자 지금은


// 모든 프로그래밍 언어가 main 이라는 함수를 찾아서 실행한다.
void main()
{
	// IF문

	// IF문이란
	// 만약에 

	int a = 0;
	if(a == 0) // a가 0과 같다면
	{
		// 아래 내용 실행
		printf("a = 0입니다.\n");
	}



	// IF는 조건이 맞을때만 실행 시킬 수 있는 문법
	// 모든 프로그래머가 제일 많이 사용하는 문법

	// 프로그래밍을 잘해지려면
	// 말을 코드로 바꿀 수 있어야 한다.

	// IF문 사용법
	// if(조건식)
	// {
	//	 조건이 참일 때 실행하는 코드
	// }


	// 조건식 (0과 1로만 결과가 나옴)
	// 0이 거짓	(false)
	// 1이 참	(true)
	// 사칙연산 다음으로 쉬움
	int num1 = 10;
	int num2 = 20;

	// printf("%d", num1 == num2);
	printf("num1[%d] > num2[%d]\n", num1, num2, num1 > num2);
	printf("num1[%d] < num2[%d]\n", num1, num2, num1 < num2);


	// A > B : A가 B보다 크다 
	// A < B : A가 B보다 작다
	// A >= B : A가 B보다 크거나 같다
	// A <= B : A가 B보다 작거나 같다
	// A != B : A가 B와 다르다
	// A == B : A와 B가 같다

	// 여기서 = 하나는 오른쪽의 값을 왼쪽 변수에 대입하는 것이다.
	// num1에 4라는 값을 넣어주겠다.
	num1 = 4;

	// num1이 4면 1;
	// num1이 4가 아니면 0;
	num1 == 4;
	0;
	1;

	// && => and => 그리고		: A && B A와 B 둘 다 참일때만 참을 반환
	// || => or => 또는 (~거나)	: A || B A와 B 중에 하나만 참이어도 참을 반환

	// o(false), 1(true)
	// 0 && 1 => 0
	// 1 && 1 => 1
	// 0 && 0 => 0
	// 1 && 0 => 0

	// 1 || 0 => 1
	// 1 || 1 => 1
	// 0 || 0 => 0
	// 0 || 1 => 1

	printf("%d", 0 && 0);

	int input1 = 0;
	printf("점수를 입력해주세요 : ");
	scanf_s("%d", &input1);

	// 90 ~
	if (90 < input1)
	{
		printf("수 입니다. \n");
	}

	// 80 ~ 90
	if (80 < input1 && input1 <= 90)
	{
		printf("우 입니다. \n");
	}

	// 70 ~ 80 
	if (70 < input1 && input1 <= 80)
	{
		printf("미 입니다.");
	}

	// 60 ~ 70 
	if (60 < input1 && input1 <= 70)
	{
		printf("양 입니다.");
	}

	// 0 ~ 60
	if (input1 <= 60)
	{
		printf("가 입니다.");
	}

	// if문 (v)
	// 추가 내용
	// else if문
	// else문
	// => 그렇지 않으면

	if (input1 == 100)
	{
		printf("만점입니다. \n");
	}
	else if (input1 == 0) // if문 조건이 거짓이고 + 새로운 조건이 참일때
	{
		printf("빵점입니다. \n");
	}
	else // 위의 모든 IF가 거짓말일 때
	{
		printf("만점이 아닙니다.\n");
	}

}