#include <iostream>

using namespace std;

void main()
{
	// 1. 
	// 2. 포인터 -3
	// 3. 클래스


	// 숙제
	// 1. 블랙잭
	// 룰
	// 1. 플레이어가 1000원을 갖고 시작한다.
	// 2. 트럼프카드 52장을 섞는다
	// 3. 베팅을 한다.
	// 4. 딜러카드 2장, 플레이어 카드 2장을 받는다.
	// 5. 플레이어가 카드 더 받을지 선택한다.
	// 6. 플레이어의 카드 숫자 합이 21을 넘으면 패배 (J, Q, K는 10으로 계산된다. 그리고 A는 11과 1 중에 원하는걸로 계산 가능)
	// 7. 플레이어의 카드 숫자 합이 21을 넘기지 않으면 [5] 번을 반복한다.
	// 8. 플레이어가 그만 받기를 선택하면
	// 9. 딜러가 플레이어의 숫자합보다 높아질때까지 카드를 받는다.
	// 10. 딜러가 패배하지 않고 (숫자합이 21초과하지 않고), 플레이어의 숫자합보다 커지면 딜러가 승리한다.
	// 11. 딜러가 패배하면 베팅금만큼 플레이어가 획득한다.
	// 12. 플레이어가 파산하지 않았으면, 카드를 섞지않고 그 다음 카드 부터 계속 반복한다.
	// 13. 카드를 모두 사용하였으면, 그 다음판부터 카드를 새로 셔플해서 사용한다.

	// 2. 섯다
	// 룰
	// 1. 플레이어가 1000원 갖고 시작한다.
	// 2. 화투카드 20장을 섞는다.
	// 3. 베팅을 한다. (플레이어만 베팅할 수 있고, 상대는 무조건 콜)
	// 4. 플레이어한테 1장, 상대한테 1장을 준다.
	// 5. 베팅을 한다. (베팅에 0원도 가능)
	// 6. 플레이어한테 1장, 상대한테 1장을 준다.
	// 7. 족보가 더 높은쪽이 승리한다. (족보는 인터넷 참고..) (게임재시작 족보는 제외해도 됨)
	// 8. 플레이어가 0원이 되면 게임 종료
	// 9. 매판 20장을 새롭게 섞는다.

	// 3. 행맨
	// 룰
	// 1. 컴퓨터가 랜덤한 단어를 하나 선택한다.
	//  - 이 때 단어는 position, surprise, umbrella, triangle, reaction 중 하나를 뽑는다.
	// 2. _ _ _ _ _ _ _ _ (여덟칸 _ 를 출력한다)
	// 3. 사용자가 문자열 입력을 한다.
	// 4. 이 때 맞는 문자가 있으면 표시를 해준다 (예를 들어 position이 걸렸고, 플레이어가 pppppppp를 입력했다 하면)
	// p _ _ _ _ _ _ _ 가 출력된다.
	// 5. 이 때 20번동안 단어를 완성하지 못하면
	// 6. 플레이어 패배 

	string a = "posintion";
	cout << a[0] << endl; // p
	cout << a[1] << endl; // o
	// 이런식으로 나오니 참고
}