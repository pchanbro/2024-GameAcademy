#include <iostream>

using namespace std;

void main()
{
	// 자료구조가

	// 어떻게 생겼고
	// 어떻게 생겼기 때문에
	// 어떤 장점이 있고
	// 어떤 단점이 있어
	// 어떤 점에서 유리하고
	// 어떤 점에서 불리한지
	// 스스로 판단해야 한다.

	// 자료구조 처음설명할 때
	// 자료구조 2가지 종류
	
	// 1. 선형 구조 
	// 선형 자료구조의 문제점 : 특정 데이터를 찾기 위해 처음부터 둘러봐야 한다.
	// 즉, 조회가 느릴 수 밖에 없다.
	// ex) mmorpg를 만드는데 내가 몬스터의 정체를 정확히 알고있음에도 불구하고 이 몬스터를 찾ㄱ기 위해서 필드에 소환된 10만개의 몬스터 배열을 뒤져야 함
	// 물론 중간부터 찾기 시작하는 방법이 있는데 현재(240318) 우리는 안배웠다.
	
	// 2. 비선형 구조 => ex) Binary Tree
	// 대부분의 비 선형 자료구조의 특징 - 조회가 빠르다

	// Binary Tree
	// 장점 : 조회가 빠르다 : O(log n)
	// 단점 : 추가나 수정이 힘들 수 있다.
	
	// 노드가 1023개 있을 때 
	// 내가 원하는 데이터를 찾기까지 걸리는 횟수는 최대 10번이다.
	// 조회 시간복잡도 : O(log n)
	// 근데 root에 뭐가들어가냐에 따라 비효율의 극치를 달릴수도 있다.
	// 다행히 MS에서 만든거는 이상하게 넣어도 이쁘게 잘 들어간다.

	// 시간복잡도가 O(log(n) n)으로 표시되어 있다. -> 가지가 쳐져있어서 O(n)과 O(2n)의 차이정도로 O(n)보다 빠르구나 라고 생각하면 된다.

}