#include <iostream>

using namespace std;

void main()
{
	// windows API 배우는 이유

	// - 기본적으로 게임회사에 들어가면, Windows API로 코딩 안한다.
	// - 근데 왜 배우나?

	// - 배우는 이유
	// 게임엔진에서 해주는 일을(자동으로 되는 일을) 직접 구현하기 위해 

	// 직접 구현하면 뭘 배울 수 있나?
	// 어떤함수가 부하가 높고
	// 어떻게 해야 게임 최저고하가 덜되는지를 배울 수 있다.

	// Unity, Unreal 하는데
	// 갑자기 게임이 느려지면
	// 퍼포먼스 테스트를 시작한다.
	// 구조부터 잘못되었다는걸 다 만들어갈때쯤 깨닫게 되는데

	// 게임 엔진이 어떻게 돌아가는지 알아야
	// 피해야 하는 방식을 알 수 있다.
	
	// 모든걸 직접 구현해보기 때문에
	// 어떤 게임엔진을 배우든,
	// 이런식으로 코딩하면 게임을 만들 수 있겠구나.

	// Winodws API는 
	//  문법을 배우려고 수업을 듣는게 아니다.
	//  선생님이 프레임워클르 만들면서 하는데
	//  그냥 가져다 쓸 수 있을정도만 흡수해라
	//  특히 강조하는 부분은 기억하면 좋다.
	//  프레임워크의 구성요소들이 어떻게 만들어지는지 기억할 정도로 학습해라
	
	// Windows API로 게임엔진 못만든다.
	//  Direct X까지 붙여서 게임엔진 만들 수는 있으나
	//  Direct X만 1년 넘게 해야한다.


	// 디자인 패턴이라고 게임 만들때 사용하는 프로그래밍 기법이 존재한다.

	//---------------------------------------------------------------
	// 2개월차 까지는 최대한 Windows API 안나가려고 하신다.
	// 주로 클래스 사용과
	// 주로 쓰이는 기법들을 계속 할거다
	// 그리고 C++ 추가내용(안 배운 내용들)


	// Windows API 그럼 왜 외우라고 한건가?
	// Windows API를 사용해서 게임 만드는 법을 배울건데
	// 사실 별 거 아닌데, 어려운 자료형들이 많아서
	// 진입장벽이 높은 편에 속함
	// 이를 좀 완화시키고자 익숙해지라고 외우라고 한 것
}