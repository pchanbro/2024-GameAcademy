#include <iostream>


using namespace std;

void main()
{
	// 길찾기 알고리즘
	// 다익스트라보다 더 좋은게 없을거 같은데?
	// BFS 만큼 깔끔하게 길찾는 방법이 없을줄알았는데 (간선의 비용이 다른경우 문제가 생김)
	// 간선에 비용을 추가해서 더 효율적인 길을 찾는 Dijikstra 로직이 만들어짐. 
	//	( 원하는건 end 포인트에 대한 길찾기인데 뭔가 효율적이지 않음 )
	// 
	// dijikstra 를 조금 변형해서
	// astar 알고리즘

	// 비용계산을 조금 다르게합니다.
	// queue에 넣을때
	// 다익스트라 같은 경우 -> G [내 현재까지 온 비용 + 거기까지 가는 비용]
	// astar 경우 -> G [내 현재까지 온 비용 + 거기까지 가는 비용] + H (이동할 좌표부터 해당 내용까지 가는 예상 기댓값)


	// 우선 순위 큐에 대해 알아야하고
	// DFS, BFS에 대해 알아야하고
	// BFS -> 다익스트라로 변형하는 과정
	// 다익스트라 -> 에이스타로 변형하는 과정

}


//숙제 2개

// 1. 콘솔에서 Astar로 미로 길찾기 (BFS랑 길이 달라지진 않습니다.)
// 2. Windows API에서 BFS나, Astar 사용해서 타일 클릭하면 플레이어가 해당 타일로 이동하는 로직 만들기

